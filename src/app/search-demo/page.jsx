'use client';\n\nimport { useState } from 'react';\nimport { searchAPI, handleSearchError } from '../../utils/searchAPI';\n\nexport default function SearchDemo() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const testSearch = async () => {\n    if (!query.trim()) {\n      alert('검색어를 입력해주세요.');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setResults(null);\n\n    try {\n      const searchResults = await searchAPI.search(query, 5);\n      setResults(searchResults);\n      console.log('검색 결과:', searchResults);\n    } catch (err) {\n      console.error('검색 오류:', err);\n      setError(handleSearchError(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const testHealth = async () => {\n    try {\n      const health = await searchAPI.checkHealth();\n      alert(`AI 서버 상태: ${health.ai_server_connected ? '연결됨' : '연결 안됨'}`);\n      console.log('헬스체크 결과:', health);\n    } catch (err) {\n      alert('헬스체크 실패: ' + err.message);\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>\n      <h1>검색 API 테스트</h1>\n      \n      <div style={{ marginBottom: '20px' }}>\n        <h2>AI 서버 연결 테스트</h2>\n        <button \n          onClick={testHealth}\n          style={{\n            background: '#28a745',\n            color: 'white',\n            border: 'none',\n            padding: '10px 20px',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          }}\n        >\n          헬스체크\n        </button>\n      </div>\n\n      <div style={{ marginBottom: '20px' }}>\n        <h2>검색 테스트</h2>\n        <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\n          <input\n            type=\"text\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"검색어를 입력하세요 (예: 김치찌개)\"\n            style={{\n              flex: 1,\n              padding: '10px',\n              border: '1px solid #ddd',\n              borderRadius: '5px'\n            }}\n            onKeyPress={(e) => e.key === 'Enter' && testSearch()}\n          />\n          <button \n            onClick={testSearch}\n            disabled={isLoading}\n            style={{\n              background: '#f79726',\n              color: 'white',\n              border: 'none',\n              padding: '10px 20px',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            }}\n          >\n            {isLoading ? '검색 중...' : '검색'}\n          </button>\n        </div>\n        \n        <div style={{ display: 'flex', gap: '10px' }}>\n          <button onClick={() => setQuery('김치찌개')} style={buttonStyle}>김치찌개</button>\n          <button onClick={() => setQuery('파스타')} style={buttonStyle}>파스타</button>\n          <button onClick={() => setQuery('닭가슴살')} style={buttonStyle}>닭가슴살</button>\n          <button onClick={() => setQuery('토마토')} style={buttonStyle}>토마토</button>\n        </div>\n      </div>\n\n      {error && (\n        <div style={{\n          background: '#f8d7da',\n          color: '#721c24',\n          padding: '15px',\n          borderRadius: '5px',\n          marginBottom: '20px'\n        }}>\n          <strong>오류:</strong> {error}\n        </div>\n      )}\n\n      {results && (\n        <div>\n          <h2>검색 결과</h2>\n          <div style={{\n            background: '#d4edda',\n            color: '#155724',\n            padding: '15px',\n            borderRadius: '5px',\n            marginBottom: '20px'\n          }}>\n            <strong>성공!</strong> 총 {results.totalMatches}개 결과 \n            {results.processingTime && (\n              <span> (처리 시간: {results.processingTime.toFixed(3)}초)</span>\n            )}\n          </div>\n\n          {results.recipes && results.recipes.length > 0 && (\n            <div style={{ marginBottom: '20px' }}>\n              <h3>레시피 ({results.recipes.length}개)</h3>\n              {results.recipes.map((recipe, index) => (\n                <div key={index} style={{\n                  border: '1px solid #ddd',\n                  padding: '15px',\n                  marginBottom: '10px',\n                  borderRadius: '5px'\n                }}>\n                  <h4>{recipe.rcpNm}</h4>\n                  <p><strong>카테고리:</strong> {recipe.rcpCategory}</p>\n                  <p><strong>조리방법:</strong> {recipe.rcpWay2}</p>\n                  <p><strong>점수:</strong> {(recipe.score * 100).toFixed(1)}%</p>\n                  {recipe.matchReason && <p><strong>매칭 이유:</strong> {recipe.matchReason}</p>}\n                </div>\n              ))}\n            </div>\n          )}\n\n          {results.ingredients && results.ingredients.length > 0 && (\n            <div>\n              <h3>재료 ({results.ingredients.length}개)</h3>\n              {results.ingredients.map((ingredient, index) => (\n                <div key={index} style={{\n                  border: '1px solid #ddd',\n                  padding: '10px',\n                  marginBottom: '10px',\n                  borderRadius: '5px'\n                }}>\n                  <strong>{ingredient.name}</strong> ({ingredient.category}) - \n                  점수: {(ingredient.score * 100).toFixed(1)}%\n                  {ingredient.matchReason && <span> - {ingredient.matchReason}</span>}\n                </div>\n              ))}\n            </div>\n          )}\n\n          <details style={{ marginTop: '20px' }}>\n            <summary>원본 JSON 데이터</summary>\n            <pre style={{\n              background: '#f8f9fa',\n              padding: '15px',\n              borderRadius: '5px',\n              overflow: 'auto',\n              fontSize: '12px'\n            }}>\n              {JSON.stringify(results, null, 2)}\n            </pre>\n          </details>\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst buttonStyle = {\n  background: '#6c757d',\n  color: 'white',\n  border: 'none',\n  padding: '5px 10px',\n  borderRadius: '3px',\n  cursor: 'pointer',\n  fontSize: '12px'\n};\n"